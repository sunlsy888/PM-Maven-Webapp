<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="ProductMapper" >
 
  <sql id="Base_Column_List" >
    Id, PName, PVer, ReleaseTime, Remark
  </sql>
  <!-- 关键字查找 -->
<select id="findById" resultType="pd" parameterType="pd">
    select 
    <include refid="Base_Column_List" /> 
    from tb_products
    where Id = #{ID}
  </select>
  
  	<!-- 根据PID批量获取 -->
	<select id="getAllById" parameterType="page" resultType="pd">
 	select
			  <include refid="Base_Column_List" /> 
		from 
				tb_products
				  where Id in #{Id}
	</select>
  	<!-- 通过编号获取数据 -->
	<select id="findByPN" parameterType="pd" resultType="pd" useCache="false">
		select 
			 <include refid="Base_Column_List" /> 
		from 
			tb_products
		where 
		  PName = #{PName} 
		 
	</select>  
  
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
				a.Id, a.PName, a.PVer, a.ReleaseTime, a.Remark
		from 
				tb_products a
		where 1 = 1
		<if test="pd.KEYW != null and pd.KEYW != ''"><!-- 关键词检索 -->
			and
				(
					 a.PName LIKE CONCAT(CONCAT('%', #{pd.KEYW}),'%')
					 or 
					 a.PVer LIKE CONCAT(CONCAT('%', #{pd.KEYW}),'%') 
					 or
					 a.ReleaseTime LIKE CONCAT(CONCAT('%', #{pd.KEYW}),'%') 
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
			  <include refid="Base_Column_List" /> 
		from 
				tb_products
	</select>
	
 
  
  <!-- 删除 -->
  <delete id="delete" parameterType="pd"  flushCache="false">
    delete from tb_products
    where Id = #{ID}
  </delete>
  	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String"  flushCache="false">
		delete from tb_products
		where 
			Id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
  <!-- 新增 -->
  <insert id="insert"  parameterType="pd"  flushCache="false">
    insert into tb_products(PName,  PVer, ReleaseTime,  Remark)
    values (#{PName}, #{PVer}, #{ReleaseTime},  #{Remark})
  </insert>
  
  <!-- 更新 -->
  <update id="update"  parameterType="pd"  flushCache="false">
    update tb_products
    set PName = #{PName},
      PVer = #{PVer},
      ReleaseTime = #{ReleaseTime}, 
      Remark = #{Remark}
    where Id = #{Id}
  </update>
 
</mapper>
